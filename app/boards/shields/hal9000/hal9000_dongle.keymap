/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>



#define DEFAULT       0
#define SHIFT         1
#define SECONDARY     2
#define ADJUST        3
#define SETTINGS      4

#define COMBO_PRIOR_IDLE 200
#define COMBO_TIME       35


/ {
    macros {
        shift_layer: shift_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT >
                , <&macro_press &mo SHIFT>
                , <&macro_pause_for_release>
                , <&macro_release &kp LSHFT>
                , <&macro_release &mo SHIFT>
                ;
        };

        mo_ADJUST_noshift: mo_ADJUST_noshift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_release &kp LSHFT >
                , <&macro_press &mo ADJUST>
                , <&macro_pause_for_release>
                , <&macro_release &mo ADJUST>
                ;

        };

    };

    behaviors {
        tdBRC: tap_dance_0 { // not currently used
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        }; 

        tdBKT: tap_dance_1 { // not currently used
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };
        
        tdLTGT: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
        };

        secdOrAdj: secondary_or_ajust {
            // I want l1 key and shift key to take me to l2 just like lower+upper takes you to adjust.
            // Since shift isn't really a layer, I can't use ZMK's conditional layers.
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mo SECONDARY>, <&mo ADJUST>;
            mods = <(MOD_LSFT)>;
        };
    
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            require-prior-idle-ms = <150>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };

    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <COMBO_TIME>;
            key-positions = <15 16>; // e and r
            bindings = <&kp ESC>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        };

        combo_tab {
            timeout-ms = <COMBO_TIME>;
            key-positions = <27 28>;  //  d and f
            bindings = <&kp TAB>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            layers = <0>;
        };

        combo_del_lhs {
            timeout-ms = <COMBO_TIME>;
            key-positions = <26 27>; //  s and d
            bindings = <&kp DEL>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        };


        combo_del_rhs {
            timeout-ms = <COMBO_TIME>;
            key-positions = <30 31>;  // h and j
            bindings = <&kp DEL>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        };

        combo_enter {
            timeout-ms = <COMBO_TIME>;
            key-positions = <31 32>; // j and k
            bindings = <&kp ENTER>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
            layers = <0>;
        };

        combo_settings {
            timeout-ms = <COMBO_TIME>;
            key-positions = <47 48>; // bottom right two on rhs
            bindings = <&mo SETTINGS>;
            require-prior-idle-ms = <COMBO_PRIOR_IDLE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            bindings = <
&none     &kp N1       &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6       &kp N7   &kp N8    &kp N9  &kp N0   &none
&none     &kp Q        &kp W  &kp E    &kp R    &kp T                      &kp Y        &kp U    &kp I     &kp O   &kp P    &none
&none     &kp A        &kp S  &kp D    &kp F    &kp G                      &kp H        &kp J    &kp K     &kp L   &kp RET  &none
&none     &hm LCTRL Z        &kp X  &kp C    &kp V    &kp B      &kp C_MUTE &kp B  &kp N      &kp M    &kp COMMA &kp DOT &kp FSLH &none
                              &none   &none    &secdOrAdj &kp SPACE  &kp BSPC &shift_layer &none &none
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        shift_layer {
            display-name = "shift";

            bindings = <
&trans           &trans           &trans           &trans           &trans            &trans                            &trans         &trans         &trans      &trans      &trans      &trans
&trans           &trans           &trans           &trans           &trans            &trans                            &trans         &trans         &trans      &trans      &trans      &trans           
&trans           &trans           &trans           &trans           &trans            &trans                            &trans         &trans         &trans      &trans      &trans      &trans           
&trans           &trans           &trans           &trans           &trans            &trans           &trans &trans    &trans         &trans         &trans      &trans      &trans      &trans
                                                   &trans           &trans            &mo_ADJUST_noshift    &trans &trans     &trans         &trans         &trans
            
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN>;

        };

        secondary_layer {
            display-name = "secondary";

            bindings = <
&trans           &skq LGUI        &trans            &trans            &trans         &trans                       &trans    &trans    &trans    &trans    &trans     &trans
&trans           &kp EXCL         &kp DQT           &kp SQT           &kp LPAR       &kp LBRC                     &kp GRAVE &kp TILDE &kp ASTRK &kp PLUS  &kp COLON  &trans
&trans           &skq LALT        &kp TAB           &skq LSHFT        &skq LCTRL     &kp LBKT                     &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp SEMI   &trans
&trans           &kp LC(Z)        &kp LC(X)         &kp LC(C)         &kp LC(V)      &kp LC(A) &trans   &trans    &kp EQUAL &kp MINUS &kp UNDER &kp PIPE  &kp BSLH   &trans
                                                    &trans            &trans         &trans    &trans   &trans    &mo ADJUST     &trans    &trans
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN>;
            
        }; 


        adjust_layer {
            display-name = "adjust";

            bindings = <
&trans             &kp F2          &kp F3           &kp F4           &kp F5           &kp F6                           &kp F7     &kp F8      &kp F9      &kp F10     &kp F11  &trans
&trans             &kp F1          &trans           &mmv MOVE_UP     &kp RPAR         &kp RBRC                         &trans     &mkp LCLK   &mkp MCLK   &mkp RCLK   &kp F12  &trans
&trans             &trans          &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &kp RBKT                         &kp HOME   &kp PG_DN   &kp PG_UP   &kp END     &trans   &trans
&trans             &trans          &msc SCRL_LEFT   &msc SCRL_UP     &msc SCRL_DOWN   &msc SCRL_RIGHT   &trans &trans  &trans     &trans      &trans      &trans      &trans   &trans
                                                   &trans            &trans           &trans            &trans &trans  &trans     &trans      &trans
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN>;

        };

        settings_layer {
            display-name = "settings";

            bindings = <
&trans           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3      &bt BT_SEL 4                      &trans         &trans         &trans      &trans      &trans      &trans
&trans           &trans           &bt BT_SEL 0           &trans           &trans            &out OUT_TOG                      &trans         &trans         &trans      &trans      &trans      &trans           
&trans           &trans           &trans           &ext_power EP_ON &ext_power EP_TOG &trans                            &trans         &trans         &trans      &trans      &trans      &trans           
&trans           &bootloader      &sys_reset       &trans           &trans            &trans          &trans &trans     &trans         &trans         &trans      &sys_reset  &bootloader &trans      
                                                   &trans           &trans            &trans          &trans &trans     &trans         &trans         &trans
            >;
            sensor-bindings = < &inc_dec_kp C_VOL_UP C_VOL_DN>;

        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

        extra3 { status = "reserved"; };

        extra4 { status = "reserved"; };

        extra5 { status = "reserved"; };
    };
};
